name: run-tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [8.2, 8.1]
        laravel: [10.*, 9.*]
        dependency-version: [prefer-lowest, prefer-stable]
        include:
          - laravel: 10.*
            testbench: 8.*
          - laravel: 9.*
            testbench: 7.*

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }}

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: no
          MYSQL_USER: protone_media_db_test
          MYSQL_DATABASE: protone_media_db_test
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: secret
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: protone_media_db_test
        ports:
          - 5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache/files
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, mysql, mysqli, pdo_mysql, pdo_pgsql
          coverage: none

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --no-suggest

      - name: Execute tests (MySQL)
        run: vendor/bin/phpunit
        env:
          DB_DATABASE: protone_media_db_test
          DB_USERNAME: protone_media_db_test
          DB_PASSWORD: secret
          DB_PORT: ${{ job.services.mysql.ports[3306] }}

      - name: Execute tests (Postgres)
        run: vendor/bin/phpunit
        env:
          DB_CONNECTION: pgsql
          DB_DATABASE: protone_media_db_test
          DB_USERNAME: protone_media_db_test
          DB_PASSWORD: secret
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
